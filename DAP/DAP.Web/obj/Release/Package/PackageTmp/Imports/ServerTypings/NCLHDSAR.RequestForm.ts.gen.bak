
namespace DAP.NCLHDSAR {
    export class RequestForm extends Serenity.PrefixedContext {
        static formKey = 'NCLHDSAR.Request';
    }

    export interface RequestForm {
        CreatedDt: Serenity.DateEditor;
        DeadlineDt: Serenity.DateEditor;
        LastUpdatedDt: Serenity.DateEditor;
        ReqExtended: Serenity.BooleanEditor;
        ReqStage: Serenity.StringEditor;
        ReqApprover: Serenity.StringEditor;
        Email: Serenity.StringEditor;
        FirstName: Serenity.StringEditor;
        LastName: Serenity.StringEditor;
        ReqDetails: Serenity.StringEditor;
        SubjectType: Serenity.StringEditor;
        RequestType: Serenity.StringEditor;
        Address1: Serenity.StringEditor;
        City: Serenity.StringEditor;
        Country: Serenity.StringEditor;
        NclYn: Serenity.StringEditor;
        LatitudesNum: Serenity.StringEditor;
        OceaniaYn: Serenity.StringEditor;
        OceaniaMpCardNum: Serenity.StringEditor;
        RegentYn: Serenity.StringEditor;
        RegentMpCardNum: Serenity.StringEditor;
        SixthmanYn: Serenity.StringEditor;
        IdentityVerificationOptOuts: Serenity.StringEditor;
        IdentityVerificationOtherRequests: Serenity.StringEditor;
        RequestTypeNum: Serenity.IntegerEditor;
        ReqStatus: Serenity.StringEditor;
        LoadDt: Serenity.DateEditor;
        ProcessDt: Serenity.DateEditor;
    }

    [,
        ['CreatedDt', () => Serenity.DateEditor],
        ['DeadlineDt', () => Serenity.DateEditor],
        ['LastUpdatedDt', () => Serenity.DateEditor],
        ['ReqExtended', () => Serenity.BooleanEditor],
        ['ReqStage', () => Serenity.StringEditor],
        ['ReqApprover', () => Serenity.StringEditor],
        ['Email', () => Serenity.StringEditor],
        ['FirstName', () => Serenity.StringEditor],
        ['LastName', () => Serenity.StringEditor],
        ['ReqDetails', () => Serenity.StringEditor],
        ['SubjectType', () => Serenity.StringEditor],
        ['RequestType', () => Serenity.StringEditor],
        ['Address1', () => Serenity.StringEditor],
        ['City', () => Serenity.StringEditor],
        ['Country', () => Serenity.StringEditor],
        ['NclYn', () => Serenity.StringEditor],
        ['LatitudesNum', () => Serenity.StringEditor],
        ['OceaniaYn', () => Serenity.StringEditor],
        ['OceaniaMpCardNum', () => Serenity.StringEditor],
        ['RegentYn', () => Serenity.StringEditor],
        ['RegentMpCardNum', () => Serenity.StringEditor],
        ['SixthmanYn', () => Serenity.StringEditor],
        ['IdentityVerificationOptOuts', () => Serenity.StringEditor],
        ['IdentityVerificationOtherRequests', () => Serenity.StringEditor],
        ['RequestTypeNum', () => Serenity.IntegerEditor],
        ['ReqStatus', () => Serenity.StringEditor],
        ['LoadDt', () => Serenity.DateEditor],
        ['ProcessDt', () => Serenity.DateEditor]
    ].forEach(x => Object.defineProperty(RequestForm.prototype, <string>x[0], {
        get: function () {
            return this.w(x[0], (x[1] as any)());
        },
        enumerable: true,
        configurable: true
    }));
}